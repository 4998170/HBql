    ------
    Functions
    ------
    ------

String Functions

*-------------------+--------------+--------------------------+----------------------------------+---------------------+
|| Function         || Return Type || Description             ||Example                          ||Result              |
*--+--+--+--+
| trim(string)      | string       | Returns string with leading and trailing whitespace omitted | trim(' val ') |  'val'   |
*--+--+--+--+
| upper(string)     | string       | Returns the uppercase version of string | upper('val') |  'VAL'   |
*--+--+--+--+
| lower(string)     | string       | Returns the lowercase version of string | lower('VAL') |  'val'   |
*--+--+--+--+
| concat(string1, string2) | string  | Returns the concatenation of string 1 and string2 | concat('VAL', 'val') |  'VALval'   |
*--+--+--+--+
| replace(string1, string2, string3) | string  | Returns all occurences of string2 with string3 in string1 | replace('val', 'v', 'l') |  'lal'   |
*--+--+--+--+
| substring(string, int1, int2) | string  | Returns the string from 0-based index int1 to int2 in string | substring('val', '0', '2') |  'va'   |
*--+--+--+--+
| zeropad(int1, int2) | string | Returns the zero-padded string of int1 with int2 width | zeropad(4, 5) |  '00004'   |
*--+--+--+--+
| length(string) | int | Returns the length of string | length('val') |  3   |
*--+--+--+--+
| indexof(string1, string2) | int | Returns the 0-based index of string2 in string1 (-1 if not found)| indexof('val', 'v') |  0   |
*--+--+--+--+
| repeat(string, int) | string | Returns the string repeated int times | repeat('abc', 3) |  'abcabcabc'   |
*--+--+--+--+


Numeric Functions

*-------------------+--------------+--------------------------+----------------------------------+---------------------+
|| Function         || Return Type || Description             ||Example                          ||Result              |
*--+--+--+--+
| abs(number)     | number     | Returns absolute value of number   | abs(-34)    |  34      |
*--+--+--+--+
| min(number1, number2) | number | Returns the smaller of number1 and number2   | min(2, 3)    |  2      |
*--+--+--+--+
| max(number1, number2) | number | Returns the greater of number1 and number2   | abs(2, 3)    |  3      |
*--+--+--+--+
| short(string)     | short     | Returns short value of string   | short('34')    |  34      |
*--+--+--+--+
| integer(string)   | int       | Returns integer value of string | integer('34')  |  34      |
*--+--+--+--+
| long(string)      | long      | Returns long value of string    | long('34')     |  34L     |
*--+--+--+--+
| float(string)     | float     | Returns float value of string   | float('34.0')  |  34.0F   |
*--+--+--+--+
| double(string)    | double    | Returns double value of string  | double('34.0') |  34.0D   |
*--+--+--+--+
| randominteger()   | int       | Returns random int value        | randominteger() |  random int value     |
*--+--+--+--+
| randomlong()      | long      | Returns random long value       | randomlong()    |  random long value    |
*--+--+--+--+
| randomfloat()     | float     | Returns random float value      | randomfloat()   |  random float value   |
*--+--+--+--+
| randomdouble()    | double    | Returns random double value     | randomdouble()  |  random double value  |
*--+--+--+--+

Date Functions

*-------------------+--------------+--------------------------+----------------------------------+---------------------+
|| Function         || Return Type || Description             ||Example                          ||Result              |
*--+--+--+--+
| now()| date | Returns date value of current time| now() |  date value of current time |
*--+--+--+--+
| date(string1, string2)| date | Returns date value of string1 using string2 format| date('12/10/94', 'mm/dd/yy') |  date value '12/10/94' |
*--+--+--+--+
| longtodate(long) | date  | Returns date value of long ms since 1/1/70 | longtodate(758189520000L) |  date value '12/10/94' |
*--+--+--+--+
| datetolong(date) | long  | Returns date value of long ms since 1/1/70 | datetolong(date('12/10/94', 'mm/dd/yy')) |  758189520000L |
*--+--+--+--+
| randomdate()     | date  | Returns random date value | randomdate()    |  random date value  |
*--+--+--+--+
| mindate()| date | Returns minimum date value| mindate() |  longtodate(0) |
*--+--+--+--+
| maxdate()| date | Returns maximum date value| maxdate() |  longtodate(Long.MAX_VALUE) |
*--+--+--+--+

Boolean Functions

*-------------------+--------------+--------------------------+----------------------------------+---------------------+
|| Function         || Return Type || Description             ||Example                          ||Result              |
*--+--+--+--+
| definedinrow(column)| boolean | Returns true if column is defined in current row| definedinrow(f1:val1) |  true if f1:val1 is defined in current row |
*--+--+--+--+
| randomboolean()| boolean | Returns random boolean value| randomboolean() |  random boolean value |
*--+--+--+--+
| eval(string) | boolean  | Returns the evaluation of string | eval('34 = 34') | true  |
*--+--+--+--+

Interval Functions

*-------------------+--------------+--------------------------+----------------------------------+---------------------+
|| Function         || Return Type || Description             ||Example                          ||Result              |
*--+--+--+--+
| milli(long)| interval | Returns interval equal to long milliseconds| milli(3) |  3 millisecond interval |
*--+--+--+--+
| second(long)| interval | Returns interval equal to long seconds | second(3) |  3 second interval |
*--+--+--+--+
| hour(long)| interval | Returns interval equal to long hours | hour(3) |  3 hour interval |
*--+--+--+--+
| day(long)| interval | Returns interval equal to long days | day(3) |  3 day interval |
*--+--+--+--+
| week(long)| interval | Returns interval equal to long weeks | week(3) |  3 week interval |
*--+--+--+--+
| year(long)| interval | Returns interval equal to long years | year(3) |  3 year interval |
*--+--+--+--+




