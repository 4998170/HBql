    -----
    CREATE SCHEMA
    -----
    -----


CREATE SCHEMA

*Syntax

---------------------------
CREATE SCHEMA schema_name [FOR TABLE table_name] '(' attrib [, ...] ')'

attrib:
    key_description
    | column_description
    | family_default

key_description:
    key_name KEY

column_description:
    family_name ':' column_name type [ '['']' ] [ ALIAS alias_name ] [ DEFAULT constant_expression ]

family_default:
    family_name ':' '*' [ ALIAS alias_name ]

type:
    BOOLEAN   (BOOL)
    | BYTE
    | CHAR
    | SHORT
    | INTEGER (INT)
    | LONG
    | FLOAT
    | DOUBLE
    | STRING  (VARCHAR)
    | DATE    (DATETIME)
    | OBJECT  (OBJ)

---------------------------

*Description

    Defines a schema.

    * If the table name clause is omitted, then the table name defaults
    to the schema name.

    * Mutiple schemas can reference the same HBase table.

    * The SchemaManager object manages schemas and is indepedent of a particular
    Connection.

    * A single key attribute is required for a schema.

    * [] indicates an array type.

    * Column_definitions require a family qualified column name and a type.

    * Types can be abbreviations and synonyms are shown in () above.

    * The default value is used whenever a value is missing for that attribute in a given record.  The
    constant_expression cannot contain any named parameters or column references.

    * The DEFAULT clause cannot be used with array values.

    * Each table family can have one family_default attribute.  A family_default atttribute is used when
    a column value is found in the query results, and no corresponding attribute is present in the schema.
    Effectively it is a map with strings for keys (corresponding to the family qualified name) and byte[] values.
    An example can be found {{{./src/site/examples/family_default.html}here}}.

    * Both column descriptions and family defaults can have an alias name.
    If present, it can be used interchangeably with the fully qualified column name.
    Without an alias, column descriptions are referenced as "family:column" and family
     defaults are referenced as "family:*" in the API.

    * At present, schema declarations are not persistent.  Hopefully, this will change, thus
    the CREATE/DROP verbs.



*Examples

%{snippet|id=create-schema1|file=src/test/java/org/apache/hadoop/hbase/contrib/hbql/ExamplesTest.java}

%{snippet|id=create-schema2|file=src/test/java/org/apache/hadoop/hbase/contrib/hbql/ExamplesTest.java}

%{snippet|id=create-schema3|file=src/test/java/org/apache/hadoop/hbase/contrib/hbql/ExamplesTest.java}

%{snippet|id=create-schema4|file=src/test/java/org/apache/hadoop/hbase/contrib/hbql/ExamplesTest.java}


